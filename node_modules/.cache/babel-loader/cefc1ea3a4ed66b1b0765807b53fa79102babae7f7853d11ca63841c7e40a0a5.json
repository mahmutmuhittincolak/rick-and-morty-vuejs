{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\nclass AsyncSeriesHookCodeFactory extends HookCodeFactory {\n  content({\n    onError,\n    onDone\n  }) {\n    return this.callTapsSeries({\n      onError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n      onDone\n    });\n  }\n}\nconst factory = new AsyncSeriesHookCodeFactory();\nconst COMPILE = function (options) {\n  factory.setup(this, options);\n  return factory.create(options);\n};\nfunction AsyncSeriesHook(args = [], name = undefined) {\n  const hook = new Hook(args, name);\n  hook.constructor = AsyncSeriesHook;\n  hook.compile = COMPILE;\n  hook._call = undefined;\n  hook.call = undefined;\n  return hook;\n}\nAsyncSeriesHook.prototype = null;\nmodule.exports = AsyncSeriesHook;","map":{"version":3,"names":["Hook","require","HookCodeFactory","AsyncSeriesHookCodeFactory","content","onError","onDone","callTapsSeries","i","err","next","doneBreak","factory","COMPILE","options","setup","create","AsyncSeriesHook","args","name","undefined","hook","constructor","compile","_call","call","prototype","module","exports"],"sources":["C:/Users/mahmutcolak/Desktop/rick-and-morty/node_modules/tapable/lib/AsyncSeriesHook.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\"use strict\";\n\nconst Hook = require(\"./Hook\");\nconst HookCodeFactory = require(\"./HookCodeFactory\");\n\nclass AsyncSeriesHookCodeFactory extends HookCodeFactory {\n\tcontent({ onError, onDone }) {\n\t\treturn this.callTapsSeries({\n\t\t\tonError: (i, err, next, doneBreak) => onError(err) + doneBreak(true),\n\t\t\tonDone\n\t\t});\n\t}\n}\n\nconst factory = new AsyncSeriesHookCodeFactory();\n\nconst COMPILE = function(options) {\n\tfactory.setup(this, options);\n\treturn factory.create(options);\n};\n\nfunction AsyncSeriesHook(args = [], name = undefined) {\n\tconst hook = new Hook(args, name);\n\thook.constructor = AsyncSeriesHook;\n\thook.compile = COMPILE;\n\thook._call = undefined;\n\thook.call = undefined;\n\treturn hook;\n}\n\nAsyncSeriesHook.prototype = null;\n\nmodule.exports = AsyncSeriesHook;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AAEZ,MAAMA,IAAI,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,MAAMC,eAAe,GAAGD,OAAO,CAAC,mBAAmB,CAAC;AAEpD,MAAME,0BAA0B,SAASD,eAAe,CAAC;EACxDE,OAAOA,CAAC;IAAEC,OAAO;IAAEC;EAAO,CAAC,EAAE;IAC5B,OAAO,IAAI,CAACC,cAAc,CAAC;MAC1BF,OAAO,EAAEA,CAACG,CAAC,EAAEC,GAAG,EAAEC,IAAI,EAAEC,SAAS,KAAKN,OAAO,CAACI,GAAG,CAAC,GAAGE,SAAS,CAAC,IAAI,CAAC;MACpEL;IACD,CAAC,CAAC;EACH;AACD;AAEA,MAAMM,OAAO,GAAG,IAAIT,0BAA0B,EAAE;AAEhD,MAAMU,OAAO,GAAG,SAAAA,CAASC,OAAO,EAAE;EACjCF,OAAO,CAACG,KAAK,CAAC,IAAI,EAAED,OAAO,CAAC;EAC5B,OAAOF,OAAO,CAACI,MAAM,CAACF,OAAO,CAAC;AAC/B,CAAC;AAED,SAASG,eAAeA,CAACC,IAAI,GAAG,EAAE,EAAEC,IAAI,GAAGC,SAAS,EAAE;EACrD,MAAMC,IAAI,GAAG,IAAIrB,IAAI,CAACkB,IAAI,EAAEC,IAAI,CAAC;EACjCE,IAAI,CAACC,WAAW,GAAGL,eAAe;EAClCI,IAAI,CAACE,OAAO,GAAGV,OAAO;EACtBQ,IAAI,CAACG,KAAK,GAAGJ,SAAS;EACtBC,IAAI,CAACI,IAAI,GAAGL,SAAS;EACrB,OAAOC,IAAI;AACZ;AAEAJ,eAAe,CAACS,SAAS,GAAG,IAAI;AAEhCC,MAAM,CAACC,OAAO,GAAGX,eAAe"},"metadata":{},"sourceType":"script","externalDependencies":[]}