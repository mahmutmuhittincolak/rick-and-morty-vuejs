{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\nfunction _sliceIterator(arr, i) {\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n  return _arr;\n}\nfunction _slicedToArray(arr, i) {\n  if (Array.isArray(arr)) {\n    return arr;\n  } else if (Symbol.iterator in Object(arr)) {\n    return _sliceIterator(arr, i);\n  } else {\n    throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n  }\n}\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function _typeof(obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function _typeof(obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n  return _typeof(obj);\n}\nimport { signatures } from \"./signatures\";\nimport { traverse } from \"./traverse\";\nimport constants from \"@webassemblyjs/helper-wasm-bytecode\";\nimport { getSectionForNode } from \"@webassemblyjs/helper-wasm-bytecode\";\nexport function isAnonymous(ident) {\n  return ident.raw === \"\";\n}\nexport function getSectionMetadata(ast, name) {\n  var section;\n  traverse(ast, {\n    SectionMetadata: function (_SectionMetadata) {\n      function SectionMetadata(_x) {\n        return _SectionMetadata.apply(this, arguments);\n      }\n      SectionMetadata.toString = function () {\n        return _SectionMetadata.toString();\n      };\n      return SectionMetadata;\n    }(function (_ref) {\n      var node = _ref.node;\n      if (node.section === name) {\n        section = node;\n      }\n    })\n  });\n  return section;\n}\nexport function getSectionMetadatas(ast, name) {\n  var sections = [];\n  traverse(ast, {\n    SectionMetadata: function (_SectionMetadata2) {\n      function SectionMetadata(_x2) {\n        return _SectionMetadata2.apply(this, arguments);\n      }\n      SectionMetadata.toString = function () {\n        return _SectionMetadata2.toString();\n      };\n      return SectionMetadata;\n    }(function (_ref2) {\n      var node = _ref2.node;\n      if (node.section === name) {\n        sections.push(node);\n      }\n    })\n  });\n  return sections;\n}\nexport function sortSectionMetadata(m) {\n  if (m.metadata == null) {\n    console.warn(\"sortSectionMetadata: no metadata to sort\");\n    return;\n  } // $FlowIgnore\n\n  m.metadata.sections.sort(function (a, b) {\n    var aId = constants.sections[a.section];\n    var bId = constants.sections[b.section];\n    if (typeof aId !== \"number\" || typeof bId !== \"number\") {\n      throw new Error(\"Section id not found\");\n    }\n    return aId - bId;\n  });\n}\nexport function orderedInsertNode(m, n) {\n  assertHasLoc(n);\n  var didInsert = false;\n  if (n.type === \"ModuleExport\") {\n    m.fields.push(n);\n    return;\n  }\n  m.fields = m.fields.reduce(function (acc, field) {\n    var fieldEndCol = Infinity;\n    if (field.loc != null) {\n      // $FlowIgnore\n      fieldEndCol = field.loc.end.column;\n    } // $FlowIgnore: assertHasLoc ensures that\n\n    if (didInsert === false && n.loc.start.column < fieldEndCol) {\n      didInsert = true;\n      acc.push(n);\n    }\n    acc.push(field);\n    return acc;\n  }, []); // Handles empty modules or n is the last element\n\n  if (didInsert === false) {\n    m.fields.push(n);\n  }\n}\nexport function assertHasLoc(n) {\n  if (n.loc == null || n.loc.start == null || n.loc.end == null) {\n    throw new Error(\"Internal failure: node (\".concat(JSON.stringify(n.type), \") has no location information\"));\n  }\n}\nexport function getEndOfSection(s) {\n  assertHasLoc(s.size);\n  return s.startOffset + s.size.value + (\n  // $FlowIgnore\n  s.size.loc.end.column - s.size.loc.start.column);\n}\nexport function shiftLoc(node, delta) {\n  // $FlowIgnore\n  node.loc.start.column += delta; // $FlowIgnore\n\n  node.loc.end.column += delta;\n}\nexport function shiftSection(ast, node, delta) {\n  if (node.type !== \"SectionMetadata\") {\n    throw new Error(\"Can not shift node \" + JSON.stringify(node.type));\n  }\n  node.startOffset += delta;\n  if (_typeof(node.size.loc) === \"object\") {\n    shiftLoc(node.size, delta);\n  } // Custom sections doesn't have vectorOfSize\n\n  if (_typeof(node.vectorOfSize) === \"object\" && _typeof(node.vectorOfSize.loc) === \"object\") {\n    shiftLoc(node.vectorOfSize, delta);\n  }\n  var sectionName = node.section; // shift node locations within that section\n\n  traverse(ast, {\n    Node: function Node(_ref3) {\n      var node = _ref3.node;\n      var section = getSectionForNode(node);\n      if (section === sectionName && _typeof(node.loc) === \"object\") {\n        shiftLoc(node, delta);\n      }\n    }\n  });\n}\nexport function signatureForOpcode(object, name) {\n  var opcodeName = name;\n  if (object !== undefined && object !== \"\") {\n    opcodeName = object + \".\" + name;\n  }\n  var sign = signatures[opcodeName];\n  if (sign == undefined) {\n    // TODO: Uncomment this when br_table and others has been done\n    //throw new Error(\"Invalid opcode: \"+opcodeName);\n    return [object, object];\n  }\n  return sign[0];\n}\nexport function getUniqueNameGenerator() {\n  var inc = {};\n  return function () {\n    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"temp\";\n    if (!(prefix in inc)) {\n      inc[prefix] = 0;\n    } else {\n      inc[prefix] = inc[prefix] + 1;\n    }\n    return prefix + \"_\" + inc[prefix];\n  };\n}\nexport function getStartByteOffset(n) {\n  // $FlowIgnore\n  if (typeof n.loc === \"undefined\" || typeof n.loc.start === \"undefined\") {\n    throw new Error(\n    // $FlowIgnore\n    \"Can not get byte offset without loc informations, node: \" + String(n.id));\n  }\n  return n.loc.start.column;\n}\nexport function getEndByteOffset(n) {\n  // $FlowIgnore\n  if (typeof n.loc === \"undefined\" || typeof n.loc.end === \"undefined\") {\n    throw new Error(\"Can not get byte offset without loc informations, node: \" + n.type);\n  }\n  return n.loc.end.column;\n}\nexport function getFunctionBeginingByteOffset(n) {\n  if (!(n.body.length > 0)) {\n    throw new Error('n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var _n$body = _slicedToArray(n.body, 1),\n    firstInstruction = _n$body[0];\n  return getStartByteOffset(firstInstruction);\n}\nexport function getEndBlockByteOffset(n) {\n  // $FlowIgnore\n  if (!(n.instr.length > 0 || n.body.length > 0)) {\n    throw new Error('n.instr.length > 0 || n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var lastInstruction;\n  if (n.instr) {\n    // $FlowIgnore\n    lastInstruction = n.instr[n.instr.length - 1];\n  }\n  if (n.body) {\n    // $FlowIgnore\n    lastInstruction = n.body[n.body.length - 1];\n  }\n  if (!(_typeof(lastInstruction) === \"object\")) {\n    throw new Error('typeof lastInstruction === \"object\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  return getStartByteOffset(lastInstruction);\n}\nexport function getStartBlockByteOffset(n) {\n  // $FlowIgnore\n  if (!(n.instr.length > 0 || n.body.length > 0)) {\n    throw new Error('n.instr.length > 0 || n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n  var fistInstruction;\n  if (n.instr) {\n    // $FlowIgnore\n    var _n$instr = _slicedToArray(n.instr, 1);\n    fistInstruction = _n$instr[0];\n  }\n  if (n.body) {\n    // $FlowIgnore\n    var _n$body2 = _slicedToArray(n.body, 1);\n    fistInstruction = _n$body2[0];\n  }\n  if (!(_typeof(fistInstruction) === \"object\")) {\n    throw new Error('typeof fistInstruction === \"object\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  return getStartByteOffset(fistInstruction);\n}","map":{"version":3,"names":["_sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","_slicedToArray","Array","isArray","Object","TypeError","_typeof","obj","constructor","prototype","signatures","traverse","constants","getSectionForNode","isAnonymous","ident","raw","getSectionMetadata","ast","name","section","SectionMetadata","_SectionMetadata","_x","apply","arguments","toString","_ref","node","getSectionMetadatas","sections","_SectionMetadata2","_x2","_ref2","sortSectionMetadata","m","metadata","console","warn","sort","a","b","aId","bId","Error","orderedInsertNode","n","assertHasLoc","didInsert","type","fields","reduce","acc","field","fieldEndCol","Infinity","loc","end","column","start","concat","JSON","stringify","getEndOfSection","s","size","startOffset","shiftLoc","delta","shiftSection","vectorOfSize","sectionName","Node","_ref3","signatureForOpcode","object","opcodeName","sign","getUniqueNameGenerator","inc","prefix","getStartByteOffset","String","id","getEndByteOffset","getFunctionBeginingByteOffset","body","_n$body","firstInstruction","getEndBlockByteOffset","instr","lastInstruction","getStartBlockByteOffset","fistInstruction","_n$instr","_n$body2"],"sources":["C:/Users/mahmutcolak/Desktop/rick-and-morty/node_modules/@webassemblyjs/ast/esm/utils.js"],"sourcesContent":["function _sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _slicedToArray(arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return _sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nimport { signatures } from \"./signatures\";\nimport { traverse } from \"./traverse\";\nimport constants from \"@webassemblyjs/helper-wasm-bytecode\";\nimport { getSectionForNode } from \"@webassemblyjs/helper-wasm-bytecode\";\nexport function isAnonymous(ident) {\n  return ident.raw === \"\";\n}\nexport function getSectionMetadata(ast, name) {\n  var section;\n  traverse(ast, {\n    SectionMetadata: function (_SectionMetadata) {\n      function SectionMetadata(_x) {\n        return _SectionMetadata.apply(this, arguments);\n      }\n\n      SectionMetadata.toString = function () {\n        return _SectionMetadata.toString();\n      };\n\n      return SectionMetadata;\n    }(function (_ref) {\n      var node = _ref.node;\n\n      if (node.section === name) {\n        section = node;\n      }\n    })\n  });\n  return section;\n}\nexport function getSectionMetadatas(ast, name) {\n  var sections = [];\n  traverse(ast, {\n    SectionMetadata: function (_SectionMetadata2) {\n      function SectionMetadata(_x2) {\n        return _SectionMetadata2.apply(this, arguments);\n      }\n\n      SectionMetadata.toString = function () {\n        return _SectionMetadata2.toString();\n      };\n\n      return SectionMetadata;\n    }(function (_ref2) {\n      var node = _ref2.node;\n\n      if (node.section === name) {\n        sections.push(node);\n      }\n    })\n  });\n  return sections;\n}\nexport function sortSectionMetadata(m) {\n  if (m.metadata == null) {\n    console.warn(\"sortSectionMetadata: no metadata to sort\");\n    return;\n  } // $FlowIgnore\n\n\n  m.metadata.sections.sort(function (a, b) {\n    var aId = constants.sections[a.section];\n    var bId = constants.sections[b.section];\n\n    if (typeof aId !== \"number\" || typeof bId !== \"number\") {\n      throw new Error(\"Section id not found\");\n    }\n\n    return aId - bId;\n  });\n}\nexport function orderedInsertNode(m, n) {\n  assertHasLoc(n);\n  var didInsert = false;\n\n  if (n.type === \"ModuleExport\") {\n    m.fields.push(n);\n    return;\n  }\n\n  m.fields = m.fields.reduce(function (acc, field) {\n    var fieldEndCol = Infinity;\n\n    if (field.loc != null) {\n      // $FlowIgnore\n      fieldEndCol = field.loc.end.column;\n    } // $FlowIgnore: assertHasLoc ensures that\n\n\n    if (didInsert === false && n.loc.start.column < fieldEndCol) {\n      didInsert = true;\n      acc.push(n);\n    }\n\n    acc.push(field);\n    return acc;\n  }, []); // Handles empty modules or n is the last element\n\n  if (didInsert === false) {\n    m.fields.push(n);\n  }\n}\nexport function assertHasLoc(n) {\n  if (n.loc == null || n.loc.start == null || n.loc.end == null) {\n    throw new Error(\"Internal failure: node (\".concat(JSON.stringify(n.type), \") has no location information\"));\n  }\n}\nexport function getEndOfSection(s) {\n  assertHasLoc(s.size);\n  return s.startOffset + s.size.value + ( // $FlowIgnore\n  s.size.loc.end.column - s.size.loc.start.column);\n}\nexport function shiftLoc(node, delta) {\n  // $FlowIgnore\n  node.loc.start.column += delta; // $FlowIgnore\n\n  node.loc.end.column += delta;\n}\nexport function shiftSection(ast, node, delta) {\n  if (node.type !== \"SectionMetadata\") {\n    throw new Error(\"Can not shift node \" + JSON.stringify(node.type));\n  }\n\n  node.startOffset += delta;\n\n  if (_typeof(node.size.loc) === \"object\") {\n    shiftLoc(node.size, delta);\n  } // Custom sections doesn't have vectorOfSize\n\n\n  if (_typeof(node.vectorOfSize) === \"object\" && _typeof(node.vectorOfSize.loc) === \"object\") {\n    shiftLoc(node.vectorOfSize, delta);\n  }\n\n  var sectionName = node.section; // shift node locations within that section\n\n  traverse(ast, {\n    Node: function Node(_ref3) {\n      var node = _ref3.node;\n      var section = getSectionForNode(node);\n\n      if (section === sectionName && _typeof(node.loc) === \"object\") {\n        shiftLoc(node, delta);\n      }\n    }\n  });\n}\nexport function signatureForOpcode(object, name) {\n  var opcodeName = name;\n\n  if (object !== undefined && object !== \"\") {\n    opcodeName = object + \".\" + name;\n  }\n\n  var sign = signatures[opcodeName];\n\n  if (sign == undefined) {\n    // TODO: Uncomment this when br_table and others has been done\n    //throw new Error(\"Invalid opcode: \"+opcodeName);\n    return [object, object];\n  }\n\n  return sign[0];\n}\nexport function getUniqueNameGenerator() {\n  var inc = {};\n  return function () {\n    var prefix = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"temp\";\n\n    if (!(prefix in inc)) {\n      inc[prefix] = 0;\n    } else {\n      inc[prefix] = inc[prefix] + 1;\n    }\n\n    return prefix + \"_\" + inc[prefix];\n  };\n}\nexport function getStartByteOffset(n) {\n  // $FlowIgnore\n  if (typeof n.loc === \"undefined\" || typeof n.loc.start === \"undefined\") {\n    throw new Error( // $FlowIgnore\n    \"Can not get byte offset without loc informations, node: \" + String(n.id));\n  }\n\n  return n.loc.start.column;\n}\nexport function getEndByteOffset(n) {\n  // $FlowIgnore\n  if (typeof n.loc === \"undefined\" || typeof n.loc.end === \"undefined\") {\n    throw new Error(\"Can not get byte offset without loc informations, node: \" + n.type);\n  }\n\n  return n.loc.end.column;\n}\nexport function getFunctionBeginingByteOffset(n) {\n  if (!(n.body.length > 0)) {\n    throw new Error('n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var _n$body = _slicedToArray(n.body, 1),\n      firstInstruction = _n$body[0];\n\n  return getStartByteOffset(firstInstruction);\n}\nexport function getEndBlockByteOffset(n) {\n  // $FlowIgnore\n  if (!(n.instr.length > 0 || n.body.length > 0)) {\n    throw new Error('n.instr.length > 0 || n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var lastInstruction;\n\n  if (n.instr) {\n    // $FlowIgnore\n    lastInstruction = n.instr[n.instr.length - 1];\n  }\n\n  if (n.body) {\n    // $FlowIgnore\n    lastInstruction = n.body[n.body.length - 1];\n  }\n\n  if (!(_typeof(lastInstruction) === \"object\")) {\n    throw new Error('typeof lastInstruction === \"object\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  return getStartByteOffset(lastInstruction);\n}\nexport function getStartBlockByteOffset(n) {\n  // $FlowIgnore\n  if (!(n.instr.length > 0 || n.body.length > 0)) {\n    throw new Error('n.instr.length > 0 || n.body.length > 0' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  var fistInstruction;\n\n  if (n.instr) {\n    // $FlowIgnore\n    var _n$instr = _slicedToArray(n.instr, 1);\n\n    fistInstruction = _n$instr[0];\n  }\n\n  if (n.body) {\n    // $FlowIgnore\n    var _n$body2 = _slicedToArray(n.body, 1);\n\n    fistInstruction = _n$body2[0];\n  }\n\n  if (!(_typeof(fistInstruction) === \"object\")) {\n    throw new Error('typeof fistInstruction === \"object\"' + \" error: \" + (undefined || \"unknown\"));\n  }\n\n  // $FlowIgnore\n  return getStartByteOffset(fistInstruction);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}