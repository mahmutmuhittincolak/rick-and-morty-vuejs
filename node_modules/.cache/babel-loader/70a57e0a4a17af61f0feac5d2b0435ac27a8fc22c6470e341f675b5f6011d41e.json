{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst getInnerRequest = require(\"./getInnerRequest\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class AliasFieldPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {string | Array<string>} field field\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, field, target) {\n    this.source = source;\n    this.field = field;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    resolver.getHook(this.source).tapAsync(\"AliasFieldPlugin\", (request, resolveContext, callback) => {\n      if (!request.descriptionFileData) return callback();\n      const innerRequest = getInnerRequest(resolver, request);\n      if (!innerRequest) return callback();\n      const fieldData = DescriptionFileUtils.getField(request.descriptionFileData, this.field);\n      if (fieldData === null || typeof fieldData !== \"object\") {\n        if (resolveContext.log) resolveContext.log(\"Field '\" + this.field + \"' doesn't contain a valid alias configuration\");\n        return callback();\n      }\n      const data = Object.prototype.hasOwnProperty.call(fieldData, innerRequest) ? fieldData[innerRequest] : innerRequest.startsWith(\"./\") ? fieldData[innerRequest.slice(2)] : undefined;\n      if (data === innerRequest) return callback();\n      if (data === undefined) return callback();\n      if (data === false) {\n        /** @type {ResolveRequest} */\n        const ignoreObj = {\n          ...request,\n          path: false\n        };\n        if (typeof resolveContext.yield === \"function\") {\n          resolveContext.yield(ignoreObj);\n          return callback(null, null);\n        }\n        return callback(null, ignoreObj);\n      }\n      const obj = {\n        ...request,\n        path: request.descriptionFileRoot,\n        request: data,\n        fullySpecified: false\n      };\n      resolver.doResolve(target, obj, \"aliased from description file \" + request.descriptionFilePath + \" with mapping '\" + innerRequest + \"' to '\" + data + \"'\", resolveContext, (err, result) => {\n        if (err) return callback(err);\n\n        // Don't allow other aliasing or raw request\n        if (result === undefined) return callback(null, null);\n        callback(null, result);\n      });\n    });\n  }\n};","map":{"version":3,"names":["DescriptionFileUtils","require","getInnerRequest","module","exports","AliasFieldPlugin","constructor","source","field","target","apply","resolver","ensureHook","getHook","tapAsync","request","resolveContext","callback","descriptionFileData","innerRequest","fieldData","getField","log","data","Object","prototype","hasOwnProperty","call","startsWith","slice","undefined","ignoreObj","path","yield","obj","descriptionFileRoot","fullySpecified","doResolve","descriptionFilePath","err","result"],"sources":["C:/Users/mahmutcolak/Desktop/rick-and-morty/node_modules/enhanced-resolve/lib/AliasFieldPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst DescriptionFileUtils = require(\"./DescriptionFileUtils\");\nconst getInnerRequest = require(\"./getInnerRequest\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n\nmodule.exports = class AliasFieldPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {string | Array<string>} field field\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, field, target) {\n\t\tthis.source = source;\n\t\tthis.field = field;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"AliasFieldPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tif (!request.descriptionFileData) return callback();\n\t\t\t\tconst innerRequest = getInnerRequest(resolver, request);\n\t\t\t\tif (!innerRequest) return callback();\n\t\t\t\tconst fieldData = DescriptionFileUtils.getField(\n\t\t\t\t\trequest.descriptionFileData,\n\t\t\t\t\tthis.field\n\t\t\t\t);\n\t\t\t\tif (fieldData === null || typeof fieldData !== \"object\") {\n\t\t\t\t\tif (resolveContext.log)\n\t\t\t\t\t\tresolveContext.log(\n\t\t\t\t\t\t\t\"Field '\" +\n\t\t\t\t\t\t\t\tthis.field +\n\t\t\t\t\t\t\t\t\"' doesn't contain a valid alias configuration\"\n\t\t\t\t\t\t);\n\t\t\t\t\treturn callback();\n\t\t\t\t}\n\t\t\t\tconst data = Object.prototype.hasOwnProperty.call(\n\t\t\t\t\tfieldData,\n\t\t\t\t\tinnerRequest\n\t\t\t\t)\n\t\t\t\t\t? fieldData[innerRequest]\n\t\t\t\t\t: innerRequest.startsWith(\"./\")\n\t\t\t\t\t? fieldData[innerRequest.slice(2)]\n\t\t\t\t\t: undefined;\n\t\t\t\tif (data === innerRequest) return callback();\n\t\t\t\tif (data === undefined) return callback();\n\t\t\t\tif (data === false) {\n\t\t\t\t\t/** @type {ResolveRequest} */\n\t\t\t\t\tconst ignoreObj = {\n\t\t\t\t\t\t...request,\n\t\t\t\t\t\tpath: false\n\t\t\t\t\t};\n\t\t\t\t\tif (typeof resolveContext.yield === \"function\") {\n\t\t\t\t\t\tresolveContext.yield(ignoreObj);\n\t\t\t\t\t\treturn callback(null, null);\n\t\t\t\t\t}\n\t\t\t\t\treturn callback(null, ignoreObj);\n\t\t\t\t}\n\t\t\t\tconst obj = {\n\t\t\t\t\t...request,\n\t\t\t\t\tpath: request.descriptionFileRoot,\n\t\t\t\t\trequest: data,\n\t\t\t\t\tfullySpecified: false\n\t\t\t\t};\n\t\t\t\tresolver.doResolve(\n\t\t\t\t\ttarget,\n\t\t\t\t\tobj,\n\t\t\t\t\t\"aliased from description file \" +\n\t\t\t\t\t\trequest.descriptionFilePath +\n\t\t\t\t\t\t\" with mapping '\" +\n\t\t\t\t\t\tinnerRequest +\n\t\t\t\t\t\t\"' to '\" +\n\t\t\t\t\t\tdata +\n\t\t\t\t\t\t\"'\",\n\t\t\t\t\tresolveContext,\n\t\t\t\t\t(err, result) => {\n\t\t\t\t\t\tif (err) return callback(err);\n\n\t\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\t\tif (result === undefined) return callback(null, null);\n\t\t\t\t\t\tcallback(null, result);\n\t\t\t\t\t}\n\t\t\t\t);\n\t\t\t});\n\t}\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}