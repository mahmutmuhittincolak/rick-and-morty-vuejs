{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{ alias: string|string[], extension: string }} ExtensionAliasOption */\n\nmodule.exports = class ExtensionAliasPlugin {\n  /**\n   * @param {string | ResolveStepHook} source source\n   * @param {ExtensionAliasOption} options options\n   * @param {string | ResolveStepHook} target target\n   */\n  constructor(source, options, target) {\n    this.source = source;\n    this.options = options;\n    this.target = target;\n  }\n\n  /**\n   * @param {Resolver} resolver the resolver\n   * @returns {void}\n   */\n  apply(resolver) {\n    const target = resolver.ensureHook(this.target);\n    const {\n      extension,\n      alias\n    } = this.options;\n    resolver.getHook(this.source).tapAsync(\"ExtensionAliasPlugin\", (request, resolveContext, callback) => {\n      const requestPath = request.request;\n      if (!requestPath || !requestPath.endsWith(extension)) return callback();\n      const resolve = (alias, callback) => {\n        resolver.doResolve(target, {\n          ...request,\n          request: `${requestPath.slice(0, -extension.length)}${alias}`,\n          fullySpecified: true\n        }, `aliased from extension alias with mapping '${extension}' to '${alias}'`, resolveContext, callback);\n      };\n      const stoppingCallback = (err, result) => {\n        if (err) return callback(err);\n        if (result) return callback(null, result);\n        // Don't allow other aliasing or raw request\n        return callback(null, null);\n      };\n      if (typeof alias === \"string\") {\n        resolve(alias, stoppingCallback);\n      } else if (alias.length > 1) {\n        forEachBail(alias, resolve, stoppingCallback);\n      } else {\n        resolve(alias[0], stoppingCallback);\n      }\n    });\n  }\n};","map":{"version":3,"names":["forEachBail","require","module","exports","ExtensionAliasPlugin","constructor","source","options","target","apply","resolver","ensureHook","extension","alias","getHook","tapAsync","request","resolveContext","callback","requestPath","endsWith","resolve","doResolve","slice","length","fullySpecified","stoppingCallback","err","result"],"sources":["C:/Users/mahmutcolak/Desktop/rick-and-morty/node_modules/enhanced-resolve/lib/ExtensionAliasPlugin.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Ivan Kopeykin @vankop\n*/\n\n\"use strict\";\n\nconst forEachBail = require(\"./forEachBail\");\n\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").ResolveStepHook} ResolveStepHook */\n/** @typedef {{ alias: string|string[], extension: string }} ExtensionAliasOption */\n\nmodule.exports = class ExtensionAliasPlugin {\n\t/**\n\t * @param {string | ResolveStepHook} source source\n\t * @param {ExtensionAliasOption} options options\n\t * @param {string | ResolveStepHook} target target\n\t */\n\tconstructor(source, options, target) {\n\t\tthis.source = source;\n\t\tthis.options = options;\n\t\tthis.target = target;\n\t}\n\n\t/**\n\t * @param {Resolver} resolver the resolver\n\t * @returns {void}\n\t */\n\tapply(resolver) {\n\t\tconst target = resolver.ensureHook(this.target);\n\t\tconst { extension, alias } = this.options;\n\t\tresolver\n\t\t\t.getHook(this.source)\n\t\t\t.tapAsync(\"ExtensionAliasPlugin\", (request, resolveContext, callback) => {\n\t\t\t\tconst requestPath = request.request;\n\t\t\t\tif (!requestPath || !requestPath.endsWith(extension)) return callback();\n\t\t\t\tconst resolve = (alias, callback) => {\n\t\t\t\t\tresolver.doResolve(\n\t\t\t\t\t\ttarget,\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\t...request,\n\t\t\t\t\t\t\trequest: `${requestPath.slice(0, -extension.length)}${alias}`,\n\t\t\t\t\t\t\tfullySpecified: true\n\t\t\t\t\t\t},\n\t\t\t\t\t\t`aliased from extension alias with mapping '${extension}' to '${alias}'`,\n\t\t\t\t\t\tresolveContext,\n\t\t\t\t\t\tcallback\n\t\t\t\t\t);\n\t\t\t\t};\n\n\t\t\t\tconst stoppingCallback = (err, result) => {\n\t\t\t\t\tif (err) return callback(err);\n\t\t\t\t\tif (result) return callback(null, result);\n\t\t\t\t\t// Don't allow other aliasing or raw request\n\t\t\t\t\treturn callback(null, null);\n\t\t\t\t};\n\t\t\t\tif (typeof alias === \"string\") {\n\t\t\t\t\tresolve(alias, stoppingCallback);\n\t\t\t\t} else if (alias.length > 1) {\n\t\t\t\t\tforEachBail(alias, resolve, stoppingCallback);\n\t\t\t\t} else {\n\t\t\t\t\tresolve(alias[0], stoppingCallback);\n\t\t\t\t}\n\t\t\t});\n\t}\n};\n"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA,YAAY;;AAEZ,MAAMA,WAAW,GAAGC,OAAO,CAAC,eAAe,CAAC;;AAE5C;AACA;AACA;AACA;;AAEAC,MAAM,CAACC,OAAO,GAAG,MAAMC,oBAAoB,CAAC;EAC3C;AACD;AACA;AACA;AACA;EACCC,WAAWA,CAACC,MAAM,EAAEC,OAAO,EAAEC,MAAM,EAAE;IACpC,IAAI,CAACF,MAAM,GAAGA,MAAM;IACpB,IAAI,CAACC,OAAO,GAAGA,OAAO;IACtB,IAAI,CAACC,MAAM,GAAGA,MAAM;EACrB;;EAEA;AACD;AACA;AACA;EACCC,KAAKA,CAACC,QAAQ,EAAE;IACf,MAAMF,MAAM,GAAGE,QAAQ,CAACC,UAAU,CAAC,IAAI,CAACH,MAAM,CAAC;IAC/C,MAAM;MAAEI,SAAS;MAAEC;IAAM,CAAC,GAAG,IAAI,CAACN,OAAO;IACzCG,QAAQ,CACNI,OAAO,CAAC,IAAI,CAACR,MAAM,CAAC,CACpBS,QAAQ,CAAC,sBAAsB,EAAE,CAACC,OAAO,EAAEC,cAAc,EAAEC,QAAQ,KAAK;MACxE,MAAMC,WAAW,GAAGH,OAAO,CAACA,OAAO;MACnC,IAAI,CAACG,WAAW,IAAI,CAACA,WAAW,CAACC,QAAQ,CAACR,SAAS,CAAC,EAAE,OAAOM,QAAQ,EAAE;MACvE,MAAMG,OAAO,GAAGA,CAACR,KAAK,EAAEK,QAAQ,KAAK;QACpCR,QAAQ,CAACY,SAAS,CACjBd,MAAM,EACN;UACC,GAAGQ,OAAO;UACVA,OAAO,EAAG,GAAEG,WAAW,CAACI,KAAK,CAAC,CAAC,EAAE,CAACX,SAAS,CAACY,MAAM,CAAE,GAAEX,KAAM,EAAC;UAC7DY,cAAc,EAAE;QACjB,CAAC,EACA,8CAA6Cb,SAAU,SAAQC,KAAM,GAAE,EACxEI,cAAc,EACdC,QAAQ,CACR;MACF,CAAC;MAED,MAAMQ,gBAAgB,GAAGA,CAACC,GAAG,EAAEC,MAAM,KAAK;QACzC,IAAID,GAAG,EAAE,OAAOT,QAAQ,CAACS,GAAG,CAAC;QAC7B,IAAIC,MAAM,EAAE,OAAOV,QAAQ,CAAC,IAAI,EAAEU,MAAM,CAAC;QACzC;QACA,OAAOV,QAAQ,CAAC,IAAI,EAAE,IAAI,CAAC;MAC5B,CAAC;MACD,IAAI,OAAOL,KAAK,KAAK,QAAQ,EAAE;QAC9BQ,OAAO,CAACR,KAAK,EAAEa,gBAAgB,CAAC;MACjC,CAAC,MAAM,IAAIb,KAAK,CAACW,MAAM,GAAG,CAAC,EAAE;QAC5BxB,WAAW,CAACa,KAAK,EAAEQ,OAAO,EAAEK,gBAAgB,CAAC;MAC9C,CAAC,MAAM;QACNL,OAAO,CAACR,KAAK,CAAC,CAAC,CAAC,EAAEa,gBAAgB,CAAC;MACpC;IACD,CAAC,CAAC;EACJ;AACD,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}