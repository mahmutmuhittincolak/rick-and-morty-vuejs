{"ast":null,"code":"import \"core-js/modules/web.dom-exception.stack.js\";\nimport \"core-js/modules/esnext.typed-array.to-reversed.js\";\nimport \"core-js/modules/esnext.typed-array.to-sorted.js\";\nimport \"core-js/modules/esnext.typed-array.with.js\";\nimport axios from \"axios\";\nexport default {\n  name: \"App\",\n  methods: {\n    async loadImage() {\n      const url = {};\n      const response = await axios.get(url, {\n        responseType: \"arraybuffer\"\n      });\n      if (response.status == 200) {\n        const b64 = btoa(String.fromCharCode(...new Uint8Array(response.data)));\n        const imgData = \"data:\" + response.headers[\"content-type\"] + \";base64,\" + b64;\n        this.imageSrc = imgData;\n      }\n    }\n  },\n  mounted() {\n    this.loadImage();\n  },\n  data() {\n    return {\n      urlchar: \"https://rickandmortyapi.com/api/character\",\n      chars: []\n    };\n  },\n  created() {\n    axios.get(this.urlchar).then(response => this.chars = response.data.results);\n  }\n};","map":{"version":3,"names":["axios","name","methods","loadImage","url","response","get","responseType","status","b64","btoa","String","fromCharCode","Uint8Array","data","imgData","headers","imageSrc","mounted","urlchar","chars","created","then","results"],"sources":["C:\\Users\\mahmutcolak\\Desktop\\nodeprojeler\\rickandmortyapiexample\\src\\ramexample.vue"],"sourcesContent":["<template>\n  <div class=\"container-fluid\">\n    <div class=\"background-img\">\n      <h1 class=\"header-h1\">RÄ°CK AND MORTY APP</h1>\n      <div class=\"bg-img-div\"></div>\n    </div>\n    <div class=\"content-showcase\">\n      <div class=\"content-showcase-area\">\n        <div\n          v-for=\"(item, index) in chars\"\n          :key=\"index\"\n          class=\"content-showcase-area-card\"\n        >\n          <div class=\"content-showcase-area-card-1\">\n            <img src=\"\" alt=\"\" />\n          </div>\n          <div class=\"content-showcase-area-card-2\">\n            <div class=\"section\">\n              <h2 class=\"text-white\">{{ item.name }}</h2>\n              <span class=\"status\">\n                <span class=\"status__icon\"></span>\n                status - species {{ item.image }}\n              </span>\n            </div>\n            <div class=\"section\">\n              <span class=\"text-gray\">Last known location:</span>\n              <a class=\"text-white\">location</a>\n            </div>\n            <div class=\"section\">\n              <span class=\"text-gray\">First seen in:</span>\n              <a class=\"text-white\">origin</a>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport axios from \"axios\";\n\nexport default {\n  name: \"App\",\n\n  methods: {\n    async loadImage() {\n      const url =\n        {};\n      const response = await axios.get(url, { responseType: \"arraybuffer\" });\n      if (response.status == 200) {\n        const b64 = btoa(String.fromCharCode(...new Uint8Array(response.data)));\n        const imgData =\n          \"data:\" + response.headers[\"content-type\"] + \";base64,\" + b64;\n        this.imageSrc = imgData;\n      }\n    },\n  },\n\n  mounted() {\n    this.loadImage();\n  },\n\n  data() {\n    return {\n      urlchar: \"https://rickandmortyapi.com/api/character\",\n      chars: [],\n    };\n  },\n  created() {\n    axios\n      .get(this.urlchar)\n      .then((response) => (this.chars = response.data.results));\n  },\n};\n</script>\n\n<style>\n.container-fluid {\n  padding: 0;\n}\n.content-showcase {\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  align-items: center;\n  padding: 4.5rem 0px;\n  background: rgb(39, 43, 51);\n  min-height: calc(50vh - 60px);\n}\n.content-showcase-area {\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  align-items: center;\n  flex-wrap: wrap;\n  max-width: 1920px;\n}\n.content-showcase-area-card {\n  width: 600px;\n  height: 220px;\n  display: flex;\n  overflow: hidden;\n  background: rgb(60, 62, 68);\n  border-radius: 0.5rem;\n  margin: 0.75rem;\n  box-shadow: rgba(0, 0, 0, 0.1) 0px 4px 6px -1px,\n    rgba(0, 0, 0, 0.06) 0px 2px 4px -1px;\n}\n.content-showcase-area-card img {\n  width: 100%;\n  height: 100%;\n  margin: 0px;\n  opacity: 1;\n  transition: opacity 0.5s ease 0s;\n  object-position: center center;\n  object-fit: cover;\n}\n.content-showcase-area-card-1 {\n  flex: 2 1 0%;\n  width: 100%;\n}\n\n.content-showcase-area-card-2 {\n  flex: 3 1 0%;\n  position: relative;\n  padding: 0.75rem;\n  color: rgb(255, 255, 255);\n  display: flex;\n  flex-direction: column;\n}\n.content-showcase-area-card-2 a {\n  text-decoration: none;\n}\n.content-showcase-area-card-2 .section:first-child {\n  -webkit-box-pack: start;\n  justify-content: flex-start;\n}\n.content-showcase-area-card-2 .section:last-child {\n  -webkit-box-pack: end;\n  justify-content: flex-end;\n}\n.content-showcase-area-card-2 .section + .section {\n  margin-top: 1.25rem;\n}\n.text-white {\n  color: rgb(245, 245, 245);\n}\n.text-gray {\n  color: rgb(158, 158, 158);\n}\n.content-showcase-area-card-2 .section {\n  flex: 1 1 0%;\n  display: flex;\n  flex-direction: column;\n  -webkit-box-pack: center;\n  justify-content: center;\n}\n.content-showcase-area-card-2 span,\nh2 {\n  margin: 0px;\n  padding: 0px;\n}\n.content-showcase-area-card-2 span {\n  font-size: 16px;\n  font-weight: 500;\n}\n.content-showcase-area-card-2 .status {\n  display: flex;\n  -webkit-box-align: center;\n  align-items: center;\n  text-transform: capitalize;\n}\n.content-showcase-area-card-2 .status__icon {\n  height: 0.5rem;\n  width: 0.5rem;\n  margin-right: 0.375rem;\n  background: rgb(214, 61, 46);\n  border-radius: 50%;\n}\n.status__icon {\n  height: 0.5rem;\n  width: 0.5rem;\n  margin-right: 0.375rem;\n  background: rgb(85, 204, 68);\n  border-radius: 50%;\n}\n.header-h1 {\n  margin: 0px;\n  color: rgb(32, 35, 41);\n  background-color: rgba(255, 255, 255, 0.367);\n  padding: 5px 15px;\n  border: none;\n  font-weight: 900;\n  z-index: 1;\n  font-size: 5.625rem;\n}\n.background-img {\n  display: flex;\n  -webkit-box-pack: center;\n  justify-content: center;\n  -webkit-box-align: center;\n  align-items: center;\n  flex-direction: column;\n  height: calc(50vh - 60px);\n  text-align: center;\n  position: relative;\n}\n@media (max-width: 40.625em) {\n  .content-showcase {\n    padding: 1.5rem;\n  }\n  .content-showcase-area-card {\n    flex-direction: column;\n    height: initial;\n    width: 100%;\n  }\n  .content-showcase-area-card img {\n    height: 300px;\n  }\n  .content-showcase-area-card-2 {\n    pointer-events: none;\n  }\n  .content-showcase-area-card-2 .section + .section {\n    margin-top: 1.25rem;\n  }\n  .background-img {\n    padding: 0px 1.25rem;\n  }\n}\n\n.bg-img-div {\n  position: absolute;\n  width: 100%;\n  height: 100%;\n  background-image: url(\"../src/assets/img/ram1.jpg\");\n  background-position: center;\n  background-size: cover;\n  background-repeat: no-repeat;\n}\n</style>\n"],"mappings":";;;;AAwCA,OAAOA,KAAI,MAAO,OAAO;AAEzB,eAAe;EACbC,IAAI,EAAE,KAAK;EAEXC,OAAO,EAAE;IACP,MAAMC,SAASA,CAAA,EAAG;MAChB,MAAMC,GAAE,GACN,CAAC,CAAC;MACJ,MAAMC,QAAO,GAAI,MAAML,KAAK,CAACM,GAAG,CAACF,GAAG,EAAE;QAAEG,YAAY,EAAE;MAAc,CAAC,CAAC;MACtE,IAAIF,QAAQ,CAACG,MAAK,IAAK,GAAG,EAAE;QAC1B,MAAMC,GAAE,GAAIC,IAAI,CAACC,MAAM,CAACC,YAAY,CAAC,GAAG,IAAIC,UAAU,CAACR,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC;QACvE,MAAMC,OAAM,GACV,OAAM,GAAIV,QAAQ,CAACW,OAAO,CAAC,cAAc,IAAI,UAAS,GAAIP,GAAG;QAC/D,IAAI,CAACQ,QAAO,GAAIF,OAAO;MACzB;IACF;EACF,CAAC;EAEDG,OAAOA,CAAA,EAAG;IACR,IAAI,CAACf,SAAS,EAAE;EAClB,CAAC;EAEDW,IAAIA,CAAA,EAAG;IACL,OAAO;MACLK,OAAO,EAAE,2CAA2C;MACpDC,KAAK,EAAE;IACT,CAAC;EACH,CAAC;EACDC,OAAOA,CAAA,EAAG;IACRrB,KAAI,CACDM,GAAG,CAAC,IAAI,CAACa,OAAO,EAChBG,IAAI,CAAEjB,QAAQ,IAAM,IAAI,CAACe,KAAI,GAAIf,QAAQ,CAACS,IAAI,CAACS,OAAQ,CAAC;EAC7D;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}