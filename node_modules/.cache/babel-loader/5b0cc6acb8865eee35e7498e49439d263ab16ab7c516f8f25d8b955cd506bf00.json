{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nrequire(\"core-js/modules/es.array.push.js\");\nconst versions = require(\"process\").versions;\nconst Resolver = require(\"./Resolver\");\nconst {\n  getType,\n  PathType\n} = require(\"./util/path\");\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\nconst AliasPlugin = require(\"./AliasPlugin\");\nconst AppendPlugin = require(\"./AppendPlugin\");\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\nconst ExtensionAliasPlugin = require(\"./ExtensionAliasPlugin\");\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\nconst ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\nconst NextPlugin = require(\"./NextPlugin\");\nconst ParsePlugin = require(\"./ParsePlugin\");\nconst PnpPlugin = require(\"./PnpPlugin\");\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\nconst ResultPlugin = require(\"./ResultPlugin\");\nconst RootsPlugin = require(\"./RootsPlugin\");\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\nconst TryNextPlugin = require(\"./TryNextPlugin\");\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\nconst UseFilePlugin = require(\"./UseFilePlugin\");\n\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n/** @typedef {import(\"./ExtensionAliasPlugin\").ExtensionAliasOption} ExtensionAliasOption */\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n/** @typedef {{[k: string]: string|string[] }} ExtensionAliasOptions */\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {ExtensionAliasOptions=} extensionAlias An object which maps extension to extension aliases\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {ExtensionAliasOption[]} extensionAlias\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n * @property {boolean} preferAbsolute\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\nfunction processPnpApiOption(option) {\n  if (option === undefined && /** @type {NodeJS.ProcessVersions & {pnp: string}} */versions.pnp) {\n    // @ts-ignore\n    return require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n  }\n\n  return option || null;\n}\n\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\nfunction normalizeAlias(alias) {\n  return typeof alias === \"object\" && !Array.isArray(alias) && alias !== null ? Object.keys(alias).map(key => {\n    /** @type {AliasOptionEntry} */\n    const obj = {\n      name: key,\n      onlyModule: false,\n      alias: alias[key]\n    };\n    if (/\\$$/.test(key)) {\n      obj.onlyModule = true;\n      obj.name = key.substr(0, key.length - 1);\n    }\n    return obj;\n  }) : /** @type {Array<AliasOptionEntry>} */alias || [];\n}\n\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\nfunction createOptions(options) {\n  const mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n  const mainFields = [];\n  for (const item of mainFieldsSet) {\n    if (typeof item === \"string\") {\n      mainFields.push({\n        name: [item],\n        forceRelative: true\n      });\n    } else if (Array.isArray(item)) {\n      mainFields.push({\n        name: item,\n        forceRelative: true\n      });\n    } else {\n      mainFields.push({\n        name: Array.isArray(item.name) ? item.name : [item.name],\n        forceRelative: item.forceRelative\n      });\n    }\n  }\n  return {\n    alias: normalizeAlias(options.alias),\n    fallback: normalizeAlias(options.fallback),\n    aliasFields: new Set(options.aliasFields),\n    cachePredicate: options.cachePredicate || function () {\n      return true;\n    },\n    cacheWithContext: typeof options.cacheWithContext !== \"undefined\" ? options.cacheWithContext : true,\n    exportsFields: new Set(options.exportsFields || [\"exports\"]),\n    importsFields: new Set(options.importsFields || [\"imports\"]),\n    conditionNames: new Set(options.conditionNames),\n    descriptionFiles: Array.from(new Set(options.descriptionFiles || [\"package.json\"])),\n    enforceExtension: options.enforceExtension === undefined ? options.extensions && options.extensions.includes(\"\") ? true : false : options.enforceExtension,\n    extensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n    extensionAlias: options.extensionAlias ? Object.keys(options.extensionAlias).map(k => ({\n      extension: k,\n      alias: /** @type {ExtensionAliasOptions} */options.extensionAlias[k]\n    })) : [],\n    fileSystem: options.useSyncFileSystemCalls ? new SyncAsyncFileSystemDecorator( /** @type {SyncFileSystem} */\n    /** @type {unknown} */options.fileSystem) : options.fileSystem,\n    unsafeCache: options.unsafeCache && typeof options.unsafeCache !== \"object\" ? {} : options.unsafeCache || false,\n    symlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n    resolver: options.resolver,\n    modules: mergeFilteredToArray(Array.isArray(options.modules) ? options.modules : options.modules ? [options.modules] : [\"node_modules\"], item => {\n      const type = getType(item);\n      return type === PathType.Normal || type === PathType.Relative;\n    }),\n    mainFields,\n    mainFiles: new Set(options.mainFiles || [\"index\"]),\n    plugins: options.plugins || [],\n    pnpApi: processPnpApiOption(options.pnpApi),\n    roots: new Set(options.roots || undefined),\n    fullySpecified: options.fullySpecified || false,\n    resolveToContext: options.resolveToContext || false,\n    preferRelative: options.preferRelative || false,\n    preferAbsolute: options.preferAbsolute || false,\n    restrictions: new Set(options.restrictions)\n  };\n}\n\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\nexports.createResolver = function (options) {\n  const normalizedOptions = createOptions(options);\n  const {\n    alias,\n    fallback,\n    aliasFields,\n    cachePredicate,\n    cacheWithContext,\n    conditionNames,\n    descriptionFiles,\n    enforceExtension,\n    exportsFields,\n    extensionAlias,\n    importsFields,\n    extensions,\n    fileSystem,\n    fullySpecified,\n    mainFields,\n    mainFiles,\n    modules,\n    plugins: userPlugins,\n    pnpApi,\n    resolveToContext,\n    preferRelative,\n    preferAbsolute,\n    symlinks,\n    unsafeCache,\n    resolver: customResolver,\n    restrictions,\n    roots\n  } = normalizedOptions;\n  const plugins = userPlugins.slice();\n  const resolver = customResolver ? customResolver : new Resolver(fileSystem, normalizedOptions);\n\n  //// pipeline ////\n\n  resolver.ensureHook(\"resolve\");\n  resolver.ensureHook(\"internalResolve\");\n  resolver.ensureHook(\"newInternalResolve\");\n  resolver.ensureHook(\"parsedResolve\");\n  resolver.ensureHook(\"describedResolve\");\n  resolver.ensureHook(\"rawResolve\");\n  resolver.ensureHook(\"normalResolve\");\n  resolver.ensureHook(\"internal\");\n  resolver.ensureHook(\"rawModule\");\n  resolver.ensureHook(\"module\");\n  resolver.ensureHook(\"resolveAsModule\");\n  resolver.ensureHook(\"undescribedResolveInPackage\");\n  resolver.ensureHook(\"resolveInPackage\");\n  resolver.ensureHook(\"resolveInExistingDirectory\");\n  resolver.ensureHook(\"relative\");\n  resolver.ensureHook(\"describedRelative\");\n  resolver.ensureHook(\"directory\");\n  resolver.ensureHook(\"undescribedExistingDirectory\");\n  resolver.ensureHook(\"existingDirectory\");\n  resolver.ensureHook(\"undescribedRawFile\");\n  resolver.ensureHook(\"rawFile\");\n  resolver.ensureHook(\"file\");\n  resolver.ensureHook(\"finalFile\");\n  resolver.ensureHook(\"existingFile\");\n  resolver.ensureHook(\"resolved\");\n\n  // TODO remove in next major\n  // cspell:word Interal\n  // Backward-compat\n  resolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve;\n\n  // resolve\n  for (const {\n    source,\n    resolveOptions\n  } of [{\n    source: \"resolve\",\n    resolveOptions: {\n      fullySpecified\n    }\n  }, {\n    source: \"internal-resolve\",\n    resolveOptions: {\n      fullySpecified: false\n    }\n  }]) {\n    if (unsafeCache) {\n      plugins.push(new UnsafeCachePlugin(source, cachePredicate, unsafeCache, cacheWithContext, `new-${source}`));\n      plugins.push(new ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\"));\n    } else {\n      plugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n    }\n  }\n\n  // parsed-resolve\n  plugins.push(new DescriptionFilePlugin(\"parsed-resolve\", descriptionFiles, false, \"described-resolve\"));\n  plugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\"));\n\n  // described-resolve\n  plugins.push(new NextPlugin(\"described-resolve\", \"raw-resolve\"));\n  if (fallback.length > 0) {\n    plugins.push(new AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\"));\n  }\n\n  // raw-resolve\n  if (alias.length > 0) {\n    plugins.push(new AliasPlugin(\"raw-resolve\", alias, \"internal-resolve\"));\n  }\n  aliasFields.forEach(item => {\n    plugins.push(new AliasFieldPlugin(\"raw-resolve\", item, \"internal-resolve\"));\n  });\n  extensionAlias.forEach(item => plugins.push(new ExtensionAliasPlugin(\"raw-resolve\", item, \"normal-resolve\")));\n  plugins.push(new NextPlugin(\"raw-resolve\", \"normal-resolve\"));\n\n  // normal-resolve\n  if (preferRelative) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    module: true\n  }, \"resolve as module\", false, \"raw-module\"));\n  plugins.push(new ConditionalPlugin(\"after-normal-resolve\", {\n    internal: true\n  }, \"resolve as internal import\", false, \"internal\"));\n  if (preferAbsolute) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n  if (roots.size > 0) {\n    plugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n  }\n  if (!preferRelative && !preferAbsolute) {\n    plugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n  }\n\n  // internal\n  importsFields.forEach(importsField => {\n    plugins.push(new ImportsFieldPlugin(\"internal\", conditionNames, importsField, \"relative\", \"internal-resolve\"));\n  });\n\n  // raw-module\n  exportsFields.forEach(exportsField => {\n    plugins.push(new SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\"));\n  });\n  modules.forEach(item => {\n    if (Array.isArray(item)) {\n      if (item.includes(\"node_modules\") && pnpApi) {\n        plugins.push(new ModulesInHierarchicalDirectoriesPlugin(\"raw-module\", item.filter(i => i !== \"node_modules\"), \"module\"));\n        plugins.push(new PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\"));\n      } else {\n        plugins.push(new ModulesInHierarchicalDirectoriesPlugin(\"raw-module\", item, \"module\"));\n      }\n    } else {\n      plugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n    }\n  });\n\n  // module\n  plugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\"));\n\n  // resolve-as-module\n  if (!resolveToContext) {\n    plugins.push(new ConditionalPlugin(\"resolve-as-module\", {\n      directory: false,\n      request: \".\"\n    }, \"single file module\", true, \"undescribed-raw-file\"));\n  }\n  plugins.push(new DirectoryExistsPlugin(\"resolve-as-module\", \"undescribed-resolve-in-package\"));\n\n  // undescribed-resolve-in-package\n  plugins.push(new DescriptionFilePlugin(\"undescribed-resolve-in-package\", descriptionFiles, false, \"resolve-in-package\"));\n  plugins.push(new NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\"));\n\n  // resolve-in-package\n  exportsFields.forEach(exportsField => {\n    plugins.push(new ExportsFieldPlugin(\"resolve-in-package\", conditionNames, exportsField, \"relative\"));\n  });\n  plugins.push(new NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\"));\n\n  // resolve-in-existing-directory\n  plugins.push(new JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\"));\n\n  // relative\n  plugins.push(new DescriptionFilePlugin(\"relative\", descriptionFiles, true, \"described-relative\"));\n  plugins.push(new NextPlugin(\"after-relative\", \"described-relative\"));\n\n  // described-relative\n  if (resolveToContext) {\n    plugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n  } else {\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      directory: false\n    }, null, true, \"raw-file\"));\n    plugins.push(new ConditionalPlugin(\"described-relative\", {\n      fullySpecified: false\n    }, \"as directory\", true, \"directory\"));\n  }\n\n  // directory\n  plugins.push(new DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\"));\n  if (resolveToContext) {\n    // undescribed-existing-directory\n    plugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n  } else {\n    // undescribed-existing-directory\n    plugins.push(new DescriptionFilePlugin(\"undescribed-existing-directory\", descriptionFiles, false, \"existing-directory\"));\n    mainFiles.forEach(item => {\n      plugins.push(new UseFilePlugin(\"undescribed-existing-directory\", item, \"undescribed-raw-file\"));\n    });\n\n    // described-existing-directory\n    mainFields.forEach(item => {\n      plugins.push(new MainFieldPlugin(\"existing-directory\", item, \"resolve-in-existing-directory\"));\n    });\n    mainFiles.forEach(item => {\n      plugins.push(new UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\"));\n    });\n\n    // undescribed-raw-file\n    plugins.push(new DescriptionFilePlugin(\"undescribed-raw-file\", descriptionFiles, true, \"raw-file\"));\n    plugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\"));\n\n    // raw-file\n    plugins.push(new ConditionalPlugin(\"raw-file\", {\n      fullySpecified: true\n    }, null, false, \"file\"));\n    if (!enforceExtension) {\n      plugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n    }\n    extensions.forEach(item => {\n      plugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n    });\n\n    // file\n    if (alias.length > 0) plugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n    aliasFields.forEach(item => {\n      plugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n    });\n    plugins.push(new NextPlugin(\"file\", \"final-file\"));\n\n    // final-file\n    plugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\"));\n\n    // existing-file\n    if (symlinks) plugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n    plugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n  }\n\n  // resolved\n  if (restrictions.size > 0) {\n    plugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\n  }\n  plugins.push(new ResultPlugin(resolver.hooks.resolved));\n\n  //// RESOLVER ////\n\n  for (const plugin of plugins) {\n    if (typeof plugin === \"function\") {\n      plugin.call(resolver, resolver);\n    } else {\n      plugin.apply(resolver);\n    }\n  }\n  return resolver;\n};\n\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\nfunction mergeFilteredToArray(array, filter) {\n  /** @type {Array<string | string[]>} */\n  const result = [];\n  const set = new Set(array);\n  for (const item of set) {\n    if (filter(item)) {\n      const lastElement = result.length > 0 ? result[result.length - 1] : undefined;\n      if (Array.isArray(lastElement)) {\n        lastElement.push(item);\n      } else {\n        result.push([item]);\n      }\n    } else {\n      result.push(item);\n    }\n  }\n  return result;\n}","map":{"version":3,"names":["require","versions","Resolver","getType","PathType","SyncAsyncFileSystemDecorator","AliasFieldPlugin","AliasPlugin","AppendPlugin","ConditionalPlugin","DescriptionFilePlugin","DirectoryExistsPlugin","ExportsFieldPlugin","ExtensionAliasPlugin","FileExistsPlugin","ImportsFieldPlugin","JoinRequestPartPlugin","JoinRequestPlugin","MainFieldPlugin","ModulesInHierarchicalDirectoriesPlugin","ModulesInRootPlugin","NextPlugin","ParsePlugin","PnpPlugin","RestrictionsPlugin","ResultPlugin","RootsPlugin","SelfReferencePlugin","SymlinkPlugin","TryNextPlugin","UnsafeCachePlugin","UseFilePlugin","processPnpApiOption","option","undefined","pnp","normalizeAlias","alias","Array","isArray","Object","keys","map","key","obj","name","onlyModule","test","substr","length","createOptions","options","mainFieldsSet","Set","mainFields","item","push","forceRelative","fallback","aliasFields","cachePredicate","cacheWithContext","exportsFields","importsFields","conditionNames","descriptionFiles","from","enforceExtension","extensions","includes","extensionAlias","k","extension","fileSystem","useSyncFileSystemCalls","unsafeCache","symlinks","resolver","modules","mergeFilteredToArray","type","Normal","Relative","mainFiles","plugins","pnpApi","roots","fullySpecified","resolveToContext","preferRelative","preferAbsolute","restrictions","exports","createResolver","normalizedOptions","userPlugins","customResolver","slice","ensureHook","hooks","newInteralResolve","newInternalResolve","source","resolveOptions","forEach","module","internal","size","importsField","exportsField","filter","i","directory","request","resolved","plugin","call","apply","array","result","set","lastElement"],"sources":["C:/Users/mahmutcolak/Desktop/rick-and-morty/node_modules/enhanced-resolve/lib/ResolverFactory.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst versions = require(\"process\").versions;\nconst Resolver = require(\"./Resolver\");\nconst { getType, PathType } = require(\"./util/path\");\n\nconst SyncAsyncFileSystemDecorator = require(\"./SyncAsyncFileSystemDecorator\");\n\nconst AliasFieldPlugin = require(\"./AliasFieldPlugin\");\nconst AliasPlugin = require(\"./AliasPlugin\");\nconst AppendPlugin = require(\"./AppendPlugin\");\nconst ConditionalPlugin = require(\"./ConditionalPlugin\");\nconst DescriptionFilePlugin = require(\"./DescriptionFilePlugin\");\nconst DirectoryExistsPlugin = require(\"./DirectoryExistsPlugin\");\nconst ExportsFieldPlugin = require(\"./ExportsFieldPlugin\");\nconst ExtensionAliasPlugin = require(\"./ExtensionAliasPlugin\");\nconst FileExistsPlugin = require(\"./FileExistsPlugin\");\nconst ImportsFieldPlugin = require(\"./ImportsFieldPlugin\");\nconst JoinRequestPartPlugin = require(\"./JoinRequestPartPlugin\");\nconst JoinRequestPlugin = require(\"./JoinRequestPlugin\");\nconst MainFieldPlugin = require(\"./MainFieldPlugin\");\nconst ModulesInHierarchicalDirectoriesPlugin = require(\"./ModulesInHierarchicalDirectoriesPlugin\");\nconst ModulesInRootPlugin = require(\"./ModulesInRootPlugin\");\nconst NextPlugin = require(\"./NextPlugin\");\nconst ParsePlugin = require(\"./ParsePlugin\");\nconst PnpPlugin = require(\"./PnpPlugin\");\nconst RestrictionsPlugin = require(\"./RestrictionsPlugin\");\nconst ResultPlugin = require(\"./ResultPlugin\");\nconst RootsPlugin = require(\"./RootsPlugin\");\nconst SelfReferencePlugin = require(\"./SelfReferencePlugin\");\nconst SymlinkPlugin = require(\"./SymlinkPlugin\");\nconst TryNextPlugin = require(\"./TryNextPlugin\");\nconst UnsafeCachePlugin = require(\"./UnsafeCachePlugin\");\nconst UseFilePlugin = require(\"./UseFilePlugin\");\n\n/** @typedef {import(\"./AliasPlugin\").AliasOption} AliasOptionEntry */\n/** @typedef {import(\"./ExtensionAliasPlugin\").ExtensionAliasOption} ExtensionAliasOption */\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./Resolver\").SyncFileSystem} SyncFileSystem */\n\n/** @typedef {string|string[]|false} AliasOptionNewRequest */\n/** @typedef {{[k: string]: AliasOptionNewRequest}} AliasOptions */\n/** @typedef {{[k: string]: string|string[] }} ExtensionAliasOptions */\n/** @typedef {{apply: function(Resolver): void} | function(this: Resolver, Resolver): void} Plugin */\n\n/**\n * @typedef {Object} UserResolveOptions\n * @property {(AliasOptions | AliasOptionEntry[])=} alias A list of module alias configurations or an object which maps key to value\n * @property {(AliasOptions | AliasOptionEntry[])=} fallback A list of module alias configurations or an object which maps key to value, applied only after modules option\n * @property {ExtensionAliasOptions=} extensionAlias An object which maps extension to extension aliases\n * @property {(string | string[])[]=} aliasFields A list of alias fields in description files\n * @property {(function(ResolveRequest): boolean)=} cachePredicate A function which decides whether a request should be cached or not. An object is passed with at least `path` and `request` properties.\n * @property {boolean=} cacheWithContext Whether or not the unsafeCache should include request context as part of the cache key.\n * @property {string[]=} descriptionFiles A list of description files to read from\n * @property {string[]=} conditionNames A list of exports field condition names.\n * @property {boolean=} enforceExtension Enforce that a extension from extensions must be used\n * @property {(string | string[])[]=} exportsFields A list of exports fields in description files\n * @property {(string | string[])[]=} importsFields A list of imports fields in description files\n * @property {string[]=} extensions A list of extensions which should be tried for files\n * @property {FileSystem} fileSystem The file system which should be used\n * @property {(object | boolean)=} unsafeCache Use this cache object to unsafely cache the successful requests\n * @property {boolean=} symlinks Resolve symlinks to their symlinked location\n * @property {Resolver=} resolver A prepared Resolver to which the plugins are attached\n * @property {string[] | string=} modules A list of directories to resolve modules from, can be absolute path or folder name\n * @property {(string | string[] | {name: string | string[], forceRelative: boolean})[]=} mainFields A list of main fields in description files\n * @property {string[]=} mainFiles  A list of main files in directories\n * @property {Plugin[]=} plugins A list of additional resolve plugins which should be applied\n * @property {PnpApi | null=} pnpApi A PnP API that should be used - null is \"never\", undefined is \"auto\"\n * @property {string[]=} roots A list of root paths\n * @property {boolean=} fullySpecified The request is already fully specified and no extensions or directories are resolved for it\n * @property {boolean=} resolveToContext Resolve to a context instead of a file\n * @property {(string|RegExp)[]=} restrictions A list of resolve restrictions\n * @property {boolean=} useSyncFileSystemCalls Use only the sync constraints of the file system calls\n * @property {boolean=} preferRelative Prefer to resolve module requests as relative requests before falling back to modules\n * @property {boolean=} preferAbsolute Prefer to resolve server-relative urls as absolute paths before falling back to resolve in roots\n */\n\n/**\n * @typedef {Object} ResolveOptions\n * @property {AliasOptionEntry[]} alias\n * @property {AliasOptionEntry[]} fallback\n * @property {Set<string | string[]>} aliasFields\n * @property {ExtensionAliasOption[]} extensionAlias\n * @property {(function(ResolveRequest): boolean)} cachePredicate\n * @property {boolean} cacheWithContext\n * @property {Set<string>} conditionNames A list of exports field condition names.\n * @property {string[]} descriptionFiles\n * @property {boolean} enforceExtension\n * @property {Set<string | string[]>} exportsFields\n * @property {Set<string | string[]>} importsFields\n * @property {Set<string>} extensions\n * @property {FileSystem} fileSystem\n * @property {object | false} unsafeCache\n * @property {boolean} symlinks\n * @property {Resolver=} resolver\n * @property {Array<string | string[]>} modules\n * @property {{name: string[], forceRelative: boolean}[]} mainFields\n * @property {Set<string>} mainFiles\n * @property {Plugin[]} plugins\n * @property {PnpApi | null} pnpApi\n * @property {Set<string>} roots\n * @property {boolean} fullySpecified\n * @property {boolean} resolveToContext\n * @property {Set<string|RegExp>} restrictions\n * @property {boolean} preferRelative\n * @property {boolean} preferAbsolute\n */\n\n/**\n * @param {PnpApi | null=} option option\n * @returns {PnpApi | null} processed option\n */\nfunction processPnpApiOption(option) {\n\tif (\n\t\toption === undefined &&\n\t\t/** @type {NodeJS.ProcessVersions & {pnp: string}} */ versions.pnp\n\t) {\n\t\t// @ts-ignore\n\t\treturn require(\"pnpapi\"); // eslint-disable-line node/no-missing-require\n\t}\n\n\treturn option || null;\n}\n\n/**\n * @param {AliasOptions | AliasOptionEntry[] | undefined} alias alias\n * @returns {AliasOptionEntry[]} normalized aliases\n */\nfunction normalizeAlias(alias) {\n\treturn typeof alias === \"object\" && !Array.isArray(alias) && alias !== null\n\t\t? Object.keys(alias).map(key => {\n\t\t\t\t/** @type {AliasOptionEntry} */\n\t\t\t\tconst obj = { name: key, onlyModule: false, alias: alias[key] };\n\n\t\t\t\tif (/\\$$/.test(key)) {\n\t\t\t\t\tobj.onlyModule = true;\n\t\t\t\t\tobj.name = key.substr(0, key.length - 1);\n\t\t\t\t}\n\n\t\t\t\treturn obj;\n\t\t  })\n\t\t: /** @type {Array<AliasOptionEntry>} */ (alias) || [];\n}\n\n/**\n * @param {UserResolveOptions} options input options\n * @returns {ResolveOptions} output options\n */\nfunction createOptions(options) {\n\tconst mainFieldsSet = new Set(options.mainFields || [\"main\"]);\n\tconst mainFields = [];\n\n\tfor (const item of mainFieldsSet) {\n\t\tif (typeof item === \"string\") {\n\t\t\tmainFields.push({\n\t\t\t\tname: [item],\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else if (Array.isArray(item)) {\n\t\t\tmainFields.push({\n\t\t\t\tname: item,\n\t\t\t\tforceRelative: true\n\t\t\t});\n\t\t} else {\n\t\t\tmainFields.push({\n\t\t\t\tname: Array.isArray(item.name) ? item.name : [item.name],\n\t\t\t\tforceRelative: item.forceRelative\n\t\t\t});\n\t\t}\n\t}\n\n\treturn {\n\t\talias: normalizeAlias(options.alias),\n\t\tfallback: normalizeAlias(options.fallback),\n\t\taliasFields: new Set(options.aliasFields),\n\t\tcachePredicate:\n\t\t\toptions.cachePredicate ||\n\t\t\tfunction () {\n\t\t\t\treturn true;\n\t\t\t},\n\t\tcacheWithContext:\n\t\t\ttypeof options.cacheWithContext !== \"undefined\"\n\t\t\t\t? options.cacheWithContext\n\t\t\t\t: true,\n\t\texportsFields: new Set(options.exportsFields || [\"exports\"]),\n\t\timportsFields: new Set(options.importsFields || [\"imports\"]),\n\t\tconditionNames: new Set(options.conditionNames),\n\t\tdescriptionFiles: Array.from(\n\t\t\tnew Set(options.descriptionFiles || [\"package.json\"])\n\t\t),\n\t\tenforceExtension:\n\t\t\toptions.enforceExtension === undefined\n\t\t\t\t? options.extensions && options.extensions.includes(\"\")\n\t\t\t\t\t? true\n\t\t\t\t\t: false\n\t\t\t\t: options.enforceExtension,\n\t\textensions: new Set(options.extensions || [\".js\", \".json\", \".node\"]),\n\t\textensionAlias: options.extensionAlias\n\t\t\t? Object.keys(options.extensionAlias).map(k => ({\n\t\t\t\t\textension: k,\n\t\t\t\t\talias: /** @type {ExtensionAliasOptions} */ (options.extensionAlias)[\n\t\t\t\t\t\tk\n\t\t\t\t\t]\n\t\t\t  }))\n\t\t\t: [],\n\t\tfileSystem: options.useSyncFileSystemCalls\n\t\t\t? new SyncAsyncFileSystemDecorator(\n\t\t\t\t\t/** @type {SyncFileSystem} */ (\n\t\t\t\t\t\t/** @type {unknown} */ (options.fileSystem)\n\t\t\t\t\t)\n\t\t\t  )\n\t\t\t: options.fileSystem,\n\t\tunsafeCache:\n\t\t\toptions.unsafeCache && typeof options.unsafeCache !== \"object\"\n\t\t\t\t? {}\n\t\t\t\t: options.unsafeCache || false,\n\t\tsymlinks: typeof options.symlinks !== \"undefined\" ? options.symlinks : true,\n\t\tresolver: options.resolver,\n\t\tmodules: mergeFilteredToArray(\n\t\t\tArray.isArray(options.modules)\n\t\t\t\t? options.modules\n\t\t\t\t: options.modules\n\t\t\t\t? [options.modules]\n\t\t\t\t: [\"node_modules\"],\n\t\t\titem => {\n\t\t\t\tconst type = getType(item);\n\t\t\t\treturn type === PathType.Normal || type === PathType.Relative;\n\t\t\t}\n\t\t),\n\t\tmainFields,\n\t\tmainFiles: new Set(options.mainFiles || [\"index\"]),\n\t\tplugins: options.plugins || [],\n\t\tpnpApi: processPnpApiOption(options.pnpApi),\n\t\troots: new Set(options.roots || undefined),\n\t\tfullySpecified: options.fullySpecified || false,\n\t\tresolveToContext: options.resolveToContext || false,\n\t\tpreferRelative: options.preferRelative || false,\n\t\tpreferAbsolute: options.preferAbsolute || false,\n\t\trestrictions: new Set(options.restrictions)\n\t};\n}\n\n/**\n * @param {UserResolveOptions} options resolve options\n * @returns {Resolver} created resolver\n */\nexports.createResolver = function (options) {\n\tconst normalizedOptions = createOptions(options);\n\n\tconst {\n\t\talias,\n\t\tfallback,\n\t\taliasFields,\n\t\tcachePredicate,\n\t\tcacheWithContext,\n\t\tconditionNames,\n\t\tdescriptionFiles,\n\t\tenforceExtension,\n\t\texportsFields,\n\t\textensionAlias,\n\t\timportsFields,\n\t\textensions,\n\t\tfileSystem,\n\t\tfullySpecified,\n\t\tmainFields,\n\t\tmainFiles,\n\t\tmodules,\n\t\tplugins: userPlugins,\n\t\tpnpApi,\n\t\tresolveToContext,\n\t\tpreferRelative,\n\t\tpreferAbsolute,\n\t\tsymlinks,\n\t\tunsafeCache,\n\t\tresolver: customResolver,\n\t\trestrictions,\n\t\troots\n\t} = normalizedOptions;\n\n\tconst plugins = userPlugins.slice();\n\n\tconst resolver = customResolver\n\t\t? customResolver\n\t\t: new Resolver(fileSystem, normalizedOptions);\n\n\t//// pipeline ////\n\n\tresolver.ensureHook(\"resolve\");\n\tresolver.ensureHook(\"internalResolve\");\n\tresolver.ensureHook(\"newInternalResolve\");\n\tresolver.ensureHook(\"parsedResolve\");\n\tresolver.ensureHook(\"describedResolve\");\n\tresolver.ensureHook(\"rawResolve\");\n\tresolver.ensureHook(\"normalResolve\");\n\tresolver.ensureHook(\"internal\");\n\tresolver.ensureHook(\"rawModule\");\n\tresolver.ensureHook(\"module\");\n\tresolver.ensureHook(\"resolveAsModule\");\n\tresolver.ensureHook(\"undescribedResolveInPackage\");\n\tresolver.ensureHook(\"resolveInPackage\");\n\tresolver.ensureHook(\"resolveInExistingDirectory\");\n\tresolver.ensureHook(\"relative\");\n\tresolver.ensureHook(\"describedRelative\");\n\tresolver.ensureHook(\"directory\");\n\tresolver.ensureHook(\"undescribedExistingDirectory\");\n\tresolver.ensureHook(\"existingDirectory\");\n\tresolver.ensureHook(\"undescribedRawFile\");\n\tresolver.ensureHook(\"rawFile\");\n\tresolver.ensureHook(\"file\");\n\tresolver.ensureHook(\"finalFile\");\n\tresolver.ensureHook(\"existingFile\");\n\tresolver.ensureHook(\"resolved\");\n\n\t// TODO remove in next major\n\t// cspell:word Interal\n\t// Backward-compat\n\tresolver.hooks.newInteralResolve = resolver.hooks.newInternalResolve;\n\n\t// resolve\n\tfor (const { source, resolveOptions } of [\n\t\t{ source: \"resolve\", resolveOptions: { fullySpecified } },\n\t\t{ source: \"internal-resolve\", resolveOptions: { fullySpecified: false } }\n\t]) {\n\t\tif (unsafeCache) {\n\t\t\tplugins.push(\n\t\t\t\tnew UnsafeCachePlugin(\n\t\t\t\t\tsource,\n\t\t\t\t\tcachePredicate,\n\t\t\t\t\tunsafeCache,\n\t\t\t\t\tcacheWithContext,\n\t\t\t\t\t`new-${source}`\n\t\t\t\t)\n\t\t\t);\n\t\t\tplugins.push(\n\t\t\t\tnew ParsePlugin(`new-${source}`, resolveOptions, \"parsed-resolve\")\n\t\t\t);\n\t\t} else {\n\t\t\tplugins.push(new ParsePlugin(source, resolveOptions, \"parsed-resolve\"));\n\t\t}\n\t}\n\n\t// parsed-resolve\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"parsed-resolve\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"described-resolve\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-parsed-resolve\", \"described-resolve\"));\n\n\t// described-resolve\n\tplugins.push(new NextPlugin(\"described-resolve\", \"raw-resolve\"));\n\tif (fallback.length > 0) {\n\t\tplugins.push(\n\t\t\tnew AliasPlugin(\"described-resolve\", fallback, \"internal-resolve\")\n\t\t);\n\t}\n\n\t// raw-resolve\n\tif (alias.length > 0) {\n\t\tplugins.push(new AliasPlugin(\"raw-resolve\", alias, \"internal-resolve\"));\n\t}\n\taliasFields.forEach(item => {\n\t\tplugins.push(new AliasFieldPlugin(\"raw-resolve\", item, \"internal-resolve\"));\n\t});\n\textensionAlias.forEach(item =>\n\t\tplugins.push(\n\t\t\tnew ExtensionAliasPlugin(\"raw-resolve\", item, \"normal-resolve\")\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"raw-resolve\", \"normal-resolve\"));\n\n\t// normal-resolve\n\tif (preferRelative) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ module: true },\n\t\t\t\"resolve as module\",\n\t\t\tfalse,\n\t\t\t\"raw-module\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew ConditionalPlugin(\n\t\t\t\"after-normal-resolve\",\n\t\t\t{ internal: true },\n\t\t\t\"resolve as internal import\",\n\t\t\tfalse,\n\t\t\t\"internal\"\n\t\t)\n\t);\n\tif (preferAbsolute) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\tif (roots.size > 0) {\n\t\tplugins.push(new RootsPlugin(\"after-normal-resolve\", roots, \"relative\"));\n\t}\n\tif (!preferRelative && !preferAbsolute) {\n\t\tplugins.push(new JoinRequestPlugin(\"after-normal-resolve\", \"relative\"));\n\t}\n\n\t// internal\n\timportsFields.forEach(importsField => {\n\t\tplugins.push(\n\t\t\tnew ImportsFieldPlugin(\n\t\t\t\t\"internal\",\n\t\t\t\tconditionNames,\n\t\t\t\timportsField,\n\t\t\t\t\"relative\",\n\t\t\t\t\"internal-resolve\"\n\t\t\t)\n\t\t);\n\t});\n\n\t// raw-module\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew SelfReferencePlugin(\"raw-module\", exportsField, \"resolve-as-module\")\n\t\t);\n\t});\n\tmodules.forEach(item => {\n\t\tif (Array.isArray(item)) {\n\t\t\tif (item.includes(\"node_modules\") && pnpApi) {\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\n\t\t\t\t\t\t\"raw-module\",\n\t\t\t\t\t\titem.filter(i => i !== \"node_modules\"),\n\t\t\t\t\t\t\"module\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew PnpPlugin(\"raw-module\", pnpApi, \"undescribed-resolve-in-package\")\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\tplugins.push(\n\t\t\t\t\tnew ModulesInHierarchicalDirectoriesPlugin(\n\t\t\t\t\t\t\"raw-module\",\n\t\t\t\t\t\titem,\n\t\t\t\t\t\t\"module\"\n\t\t\t\t\t)\n\t\t\t\t);\n\t\t\t}\n\t\t} else {\n\t\t\tplugins.push(new ModulesInRootPlugin(\"raw-module\", item, \"module\"));\n\t\t}\n\t});\n\n\t// module\n\tplugins.push(new JoinRequestPartPlugin(\"module\", \"resolve-as-module\"));\n\n\t// resolve-as-module\n\tif (!resolveToContext) {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"resolve-as-module\",\n\t\t\t\t{ directory: false, request: \".\" },\n\t\t\t\t\"single file module\",\n\t\t\t\ttrue,\n\t\t\t\t\"undescribed-raw-file\"\n\t\t\t)\n\t\t);\n\t}\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\n\t\t\t\"resolve-as-module\",\n\t\t\t\"undescribed-resolve-in-package\"\n\t\t)\n\t);\n\n\t// undescribed-resolve-in-package\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"undescribed-resolve-in-package\",\n\t\t\tdescriptionFiles,\n\t\t\tfalse,\n\t\t\t\"resolve-in-package\"\n\t\t)\n\t);\n\tplugins.push(\n\t\tnew NextPlugin(\"after-undescribed-resolve-in-package\", \"resolve-in-package\")\n\t);\n\n\t// resolve-in-package\n\texportsFields.forEach(exportsField => {\n\t\tplugins.push(\n\t\t\tnew ExportsFieldPlugin(\n\t\t\t\t\"resolve-in-package\",\n\t\t\t\tconditionNames,\n\t\t\t\texportsField,\n\t\t\t\t\"relative\"\n\t\t\t)\n\t\t);\n\t});\n\tplugins.push(\n\t\tnew NextPlugin(\"resolve-in-package\", \"resolve-in-existing-directory\")\n\t);\n\n\t// resolve-in-existing-directory\n\tplugins.push(\n\t\tnew JoinRequestPlugin(\"resolve-in-existing-directory\", \"relative\")\n\t);\n\n\t// relative\n\tplugins.push(\n\t\tnew DescriptionFilePlugin(\n\t\t\t\"relative\",\n\t\t\tdescriptionFiles,\n\t\t\ttrue,\n\t\t\t\"described-relative\"\n\t\t)\n\t);\n\tplugins.push(new NextPlugin(\"after-relative\", \"described-relative\"));\n\n\t// described-relative\n\tif (resolveToContext) {\n\t\tplugins.push(new NextPlugin(\"described-relative\", \"directory\"));\n\t} else {\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ directory: false },\n\t\t\t\tnull,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"described-relative\",\n\t\t\t\t{ fullySpecified: false },\n\t\t\t\t\"as directory\",\n\t\t\t\ttrue,\n\t\t\t\t\"directory\"\n\t\t\t)\n\t\t);\n\t}\n\n\t// directory\n\tplugins.push(\n\t\tnew DirectoryExistsPlugin(\"directory\", \"undescribed-existing-directory\")\n\t);\n\n\tif (resolveToContext) {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(new NextPlugin(\"undescribed-existing-directory\", \"resolved\"));\n\t} else {\n\t\t// undescribed-existing-directory\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\tfalse,\n\t\t\t\t\"existing-directory\"\n\t\t\t)\n\t\t);\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\n\t\t\t\t\t\"undescribed-existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"undescribed-raw-file\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\n\t\t// described-existing-directory\n\t\tmainFields.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew MainFieldPlugin(\n\t\t\t\t\t\"existing-directory\",\n\t\t\t\t\titem,\n\t\t\t\t\t\"resolve-in-existing-directory\"\n\t\t\t\t)\n\t\t\t);\n\t\t});\n\t\tmainFiles.forEach(item => {\n\t\t\tplugins.push(\n\t\t\t\tnew UseFilePlugin(\"existing-directory\", item, \"undescribed-raw-file\")\n\t\t\t);\n\t\t});\n\n\t\t// undescribed-raw-file\n\t\tplugins.push(\n\t\t\tnew DescriptionFilePlugin(\n\t\t\t\t\"undescribed-raw-file\",\n\t\t\t\tdescriptionFiles,\n\t\t\t\ttrue,\n\t\t\t\t\"raw-file\"\n\t\t\t)\n\t\t);\n\t\tplugins.push(new NextPlugin(\"after-undescribed-raw-file\", \"raw-file\"));\n\n\t\t// raw-file\n\t\tplugins.push(\n\t\t\tnew ConditionalPlugin(\n\t\t\t\t\"raw-file\",\n\t\t\t\t{ fullySpecified: true },\n\t\t\t\tnull,\n\t\t\t\tfalse,\n\t\t\t\t\"file\"\n\t\t\t)\n\t\t);\n\t\tif (!enforceExtension) {\n\t\t\tplugins.push(new TryNextPlugin(\"raw-file\", \"no extension\", \"file\"));\n\t\t}\n\t\textensions.forEach(item => {\n\t\t\tplugins.push(new AppendPlugin(\"raw-file\", item, \"file\"));\n\t\t});\n\n\t\t// file\n\t\tif (alias.length > 0)\n\t\t\tplugins.push(new AliasPlugin(\"file\", alias, \"internal-resolve\"));\n\t\taliasFields.forEach(item => {\n\t\t\tplugins.push(new AliasFieldPlugin(\"file\", item, \"internal-resolve\"));\n\t\t});\n\t\tplugins.push(new NextPlugin(\"file\", \"final-file\"));\n\n\t\t// final-file\n\t\tplugins.push(new FileExistsPlugin(\"final-file\", \"existing-file\"));\n\n\t\t// existing-file\n\t\tif (symlinks)\n\t\t\tplugins.push(new SymlinkPlugin(\"existing-file\", \"existing-file\"));\n\t\tplugins.push(new NextPlugin(\"existing-file\", \"resolved\"));\n\t}\n\n\t// resolved\n\tif (restrictions.size > 0) {\n\t\tplugins.push(new RestrictionsPlugin(resolver.hooks.resolved, restrictions));\n\t}\n\tplugins.push(new ResultPlugin(resolver.hooks.resolved));\n\n\t//// RESOLVER ////\n\n\tfor (const plugin of plugins) {\n\t\tif (typeof plugin === \"function\") {\n\t\t\tplugin.call(resolver, resolver);\n\t\t} else {\n\t\t\tplugin.apply(resolver);\n\t\t}\n\t}\n\n\treturn resolver;\n};\n\n/**\n * Merging filtered elements\n * @param {string[]} array source array\n * @param {function(string): boolean} filter predicate\n * @returns {Array<string | string[]>} merge result\n */\nfunction mergeFilteredToArray(array, filter) {\n\t/** @type {Array<string | string[]>} */\n\tconst result = [];\n\tconst set = new Set(array);\n\n\tfor (const item of set) {\n\t\tif (filter(item)) {\n\t\t\tconst lastElement =\n\t\t\t\tresult.length > 0 ? result[result.length - 1] : undefined;\n\t\t\tif (Array.isArray(lastElement)) {\n\t\t\t\tlastElement.push(item);\n\t\t\t} else {\n\t\t\t\tresult.push([item]);\n\t\t\t}\n\t\t} else {\n\t\t\tresult.push(item);\n\t\t}\n\t}\n\n\treturn result;\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}