{"ast":null,"code":"/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\nconst CachedInputFileSystem = require(\"./CachedInputFileSystem\");\nconst ResolverFactory = require(\"./ResolverFactory\");\n\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./ResolverFactory\").Plugin} Plugin */\n/** @typedef {import(\"./ResolverFactory\").UserResolveOptions} ResolveOptions */\n\nconst nodeFileSystem = new CachedInputFileSystem(fs, 4000);\nconst nodeContext = {\n  environments: [\"node+es3+es5+process+native\"]\n};\nconst asyncResolver = ResolverFactory.createResolver({\n  conditionNames: [\"node\"],\n  extensions: [\".js\", \".json\", \".node\"],\n  fileSystem: nodeFileSystem\n});\nfunction resolve(context, path, request, resolveContext, callback) {\n  if (typeof context === \"string\") {\n    callback = resolveContext;\n    resolveContext = request;\n    request = path;\n    path = context;\n    context = nodeContext;\n  }\n  if (typeof callback !== \"function\") {\n    callback = resolveContext;\n  }\n  asyncResolver.resolve(context, path, request, resolveContext, callback);\n}\nconst syncResolver = ResolverFactory.createResolver({\n  conditionNames: [\"node\"],\n  extensions: [\".js\", \".json\", \".node\"],\n  useSyncFileSystemCalls: true,\n  fileSystem: nodeFileSystem\n});\nfunction resolveSync(context, path, request) {\n  if (typeof context === \"string\") {\n    request = path;\n    path = context;\n    context = nodeContext;\n  }\n  return syncResolver.resolveSync(context, path, request);\n}\nfunction create(options) {\n  options = {\n    fileSystem: nodeFileSystem,\n    ...options\n  };\n  const resolver = ResolverFactory.createResolver(options);\n  return function (context, path, request, resolveContext, callback) {\n    if (typeof context === \"string\") {\n      callback = resolveContext;\n      resolveContext = request;\n      request = path;\n      path = context;\n      context = nodeContext;\n    }\n    if (typeof callback !== \"function\") {\n      callback = resolveContext;\n    }\n    resolver.resolve(context, path, request, resolveContext, callback);\n  };\n}\nfunction createSync(options) {\n  options = {\n    useSyncFileSystemCalls: true,\n    fileSystem: nodeFileSystem,\n    ...options\n  };\n  const resolver = ResolverFactory.createResolver(options);\n  return function (context, path, request) {\n    if (typeof context === \"string\") {\n      request = path;\n      path = context;\n      context = nodeContext;\n    }\n    return resolver.resolveSync(context, path, request);\n  };\n}\n\n/**\n * @template A\n * @template B\n * @param {A} obj input a\n * @param {B} exports input b\n * @returns {A & B} merged\n */\nconst mergeExports = (obj, exports) => {\n  const descriptors = Object.getOwnPropertyDescriptors(exports);\n  Object.defineProperties(obj, descriptors);\n  return (/** @type {A & B} */Object.freeze(obj)\n  );\n};\nmodule.exports = mergeExports(resolve, {\n  get sync() {\n    return resolveSync;\n  },\n  create: mergeExports(create, {\n    get sync() {\n      return createSync;\n    }\n  }),\n  ResolverFactory,\n  CachedInputFileSystem,\n  get CloneBasenamePlugin() {\n    return require(\"./CloneBasenamePlugin\");\n  },\n  get LogInfoPlugin() {\n    return require(\"./LogInfoPlugin\");\n  },\n  get forEachBail() {\n    return require(\"./forEachBail\");\n  }\n});","map":{"version":3,"names":["fs","require","CachedInputFileSystem","ResolverFactory","nodeFileSystem","nodeContext","environments","asyncResolver","createResolver","conditionNames","extensions","fileSystem","resolve","context","path","request","resolveContext","callback","syncResolver","useSyncFileSystemCalls","resolveSync","create","options","resolver","createSync","mergeExports","obj","exports","descriptors","Object","getOwnPropertyDescriptors","defineProperties","freeze","module","sync","CloneBasenamePlugin","LogInfoPlugin","forEachBail"],"sources":["C:/Users/mahmutcolak/Desktop/rick-and-morty/node_modules/enhanced-resolve/lib/index.js"],"sourcesContent":["/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n\n\"use strict\";\n\nconst fs = require(\"graceful-fs\");\nconst CachedInputFileSystem = require(\"./CachedInputFileSystem\");\nconst ResolverFactory = require(\"./ResolverFactory\");\n\n/** @typedef {import(\"./PnpPlugin\").PnpApiImpl} PnpApi */\n/** @typedef {import(\"./Resolver\")} Resolver */\n/** @typedef {import(\"./Resolver\").FileSystem} FileSystem */\n/** @typedef {import(\"./Resolver\").ResolveContext} ResolveContext */\n/** @typedef {import(\"./Resolver\").ResolveRequest} ResolveRequest */\n/** @typedef {import(\"./ResolverFactory\").Plugin} Plugin */\n/** @typedef {import(\"./ResolverFactory\").UserResolveOptions} ResolveOptions */\n\nconst nodeFileSystem = new CachedInputFileSystem(fs, 4000);\n\nconst nodeContext = {\n\tenvironments: [\"node+es3+es5+process+native\"]\n};\n\nconst asyncResolver = ResolverFactory.createResolver({\n\tconditionNames: [\"node\"],\n\textensions: [\".js\", \".json\", \".node\"],\n\tfileSystem: nodeFileSystem\n});\nfunction resolve(context, path, request, resolveContext, callback) {\n\tif (typeof context === \"string\") {\n\t\tcallback = resolveContext;\n\t\tresolveContext = request;\n\t\trequest = path;\n\t\tpath = context;\n\t\tcontext = nodeContext;\n\t}\n\tif (typeof callback !== \"function\") {\n\t\tcallback = resolveContext;\n\t}\n\tasyncResolver.resolve(context, path, request, resolveContext, callback);\n}\n\nconst syncResolver = ResolverFactory.createResolver({\n\tconditionNames: [\"node\"],\n\textensions: [\".js\", \".json\", \".node\"],\n\tuseSyncFileSystemCalls: true,\n\tfileSystem: nodeFileSystem\n});\nfunction resolveSync(context, path, request) {\n\tif (typeof context === \"string\") {\n\t\trequest = path;\n\t\tpath = context;\n\t\tcontext = nodeContext;\n\t}\n\treturn syncResolver.resolveSync(context, path, request);\n}\n\nfunction create(options) {\n\toptions = {\n\t\tfileSystem: nodeFileSystem,\n\t\t...options\n\t};\n\tconst resolver = ResolverFactory.createResolver(options);\n\treturn function (context, path, request, resolveContext, callback) {\n\t\tif (typeof context === \"string\") {\n\t\t\tcallback = resolveContext;\n\t\t\tresolveContext = request;\n\t\t\trequest = path;\n\t\t\tpath = context;\n\t\t\tcontext = nodeContext;\n\t\t}\n\t\tif (typeof callback !== \"function\") {\n\t\t\tcallback = resolveContext;\n\t\t}\n\t\tresolver.resolve(context, path, request, resolveContext, callback);\n\t};\n}\n\nfunction createSync(options) {\n\toptions = {\n\t\tuseSyncFileSystemCalls: true,\n\t\tfileSystem: nodeFileSystem,\n\t\t...options\n\t};\n\tconst resolver = ResolverFactory.createResolver(options);\n\treturn function (context, path, request) {\n\t\tif (typeof context === \"string\") {\n\t\t\trequest = path;\n\t\t\tpath = context;\n\t\t\tcontext = nodeContext;\n\t\t}\n\t\treturn resolver.resolveSync(context, path, request);\n\t};\n}\n\n/**\n * @template A\n * @template B\n * @param {A} obj input a\n * @param {B} exports input b\n * @returns {A & B} merged\n */\nconst mergeExports = (obj, exports) => {\n\tconst descriptors = Object.getOwnPropertyDescriptors(exports);\n\tObject.defineProperties(obj, descriptors);\n\treturn /** @type {A & B} */ (Object.freeze(obj));\n};\n\nmodule.exports = mergeExports(resolve, {\n\tget sync() {\n\t\treturn resolveSync;\n\t},\n\tcreate: mergeExports(create, {\n\t\tget sync() {\n\t\t\treturn createSync;\n\t\t}\n\t}),\n\tResolverFactory,\n\tCachedInputFileSystem,\n\tget CloneBasenamePlugin() {\n\t\treturn require(\"./CloneBasenamePlugin\");\n\t},\n\tget LogInfoPlugin() {\n\t\treturn require(\"./LogInfoPlugin\");\n\t},\n\tget forEachBail() {\n\t\treturn require(\"./forEachBail\");\n\t}\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}